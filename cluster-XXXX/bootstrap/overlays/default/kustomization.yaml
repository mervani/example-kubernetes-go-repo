apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
namespace: argocd

resources:
- ../../base
  #- ../../../components/applicationsets
- ../../../components/argocdproj

configMapGenerator:
- behavior: merge
  files:
    - configManagementPlugins=config.yaml
  literals:
   - kustomize.buildOptions="--enable-helm"
   - resource.customizations.useOpenLibs.argoproj.io_Application="true"
   - |
     resource.customizations.health.argoproj.io_ApplicationSet=hs = {}

     if obj.status ~= nil then
       if obj.status.conditions ~= nil then
         for i, condition in pairs(obj.status.conditions) do
           if condition.type == "ErrorOccurred" and condition.status == "True" then
             hs.status = "Degraded"
             hs.message = condition.message
             return hs
           end
           if condition.type == "ResourcesUpToDate" and condition.status == "True" then
             hs.status = "Healthy"
             hs.message = condition.message
             return hs
           end
         end
       end
     end
     
     -- Conditions were introduced in ApplicationSet v0.3. To give v0.2 users a good experience, we default to "Healthy".
     -- Once v0.3 is more generally adopted, we'll default to "Progressing" instead.
     hs.status = "Healthy"
     hs.message = ""
     return hs
   - |
     resource.customizations.health.argoproj.io_Application=hs = {}
     hs.status = "Progressing"
     hs.message = ""
     if obj.status ~= nil then
       local status = obj.status
       if status.conditions ~= nil then
         for i, condition in ipairs(status.conditions) do
           if condition.type ~= nil and string.match(condition.type, '.*Error$') then
             hs.status = "Degraded"
             hs.message = condition.message
             return hs
           end
         end
       end
       if status.health ~= nil then
         local health = status.health
         hs.status = health.status
         if health.message ~= nil then
           hs.message = health.message
         end
         local syncStatus = (status.sync and status.sync.status or nil)
         if hs.status == "Healthy" and syncStatus ~= "Synced" then
           hs.status = "Progressing"
         end
       end
     end
     return hs
  name: argocd-cm

helmCharts:
- name: argocd-app-of-app
  version: 0.2.0
  repo: https://gnunn-gitops.github.io/helm-charts
  valuesFile: values.yaml
  namespace: argocd
  releaseName: argocd-app-of-app-0.2.0
